name: Deploy to Elastic Beanstalk

on:
  push:
    branches:
      - main  # main 브랜치에 푸시될 때마다 실행

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3  # 리포지토리 코드 체크아웃

    - name: Set up JDK 17  # JDK 설치
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Grant execute permission for Gradlew  # gradlew 파일에 실행 권한 부여
      run: chmod +x ./gradlew

    - name: Cache Gradle packages  # Gradle 패키지 캐시 설정
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: ${{ runner.os }}-gradle

    - name: Build with Gradle  # 애플리케이션 빌드
      run: ./gradlew build -x test

    - name: List build directory  # 빌드 디렉토리의 파일 나열
      run: ls -la build/libs

    - name: Upload artifact to S3  # S3에 빌드된 .jar 파일 업로드
      run: aws s3 cp build/libs/happybirthday-0.0.1-SNAPSHOT.jar s3://howdoesitgoing/happybirthday-0.0.1-SNAPSHOT.jar --region ap-northeast-2
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Deploy to Elastic Beanstalk  # Elastic Beanstalk에 배포
      uses: einaregilsson/beanstalk-deploy@v20
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: "birthday"  # Elastic Beanstalk 애플리케이션 이름
        environment_name: "birthday-env-1"  # Elastic Beanstalk 환경 이름
        region: "ap-northeast-2"
        version_label: ${{ github.sha }}  # 버전 레이블로 커밋 SHA 사용
        existing_bucket_name: "howdoesitgoing"  # S3 버킷 이름
        deployment_package: "happybirthday-0.0.1-SNAPSHOT.jar"  # S3에서의 정확한 객체 경로

    - name: Clean up build files  # 빌드 후 불필요한 파일 정리
      run: ./gradlew clean
